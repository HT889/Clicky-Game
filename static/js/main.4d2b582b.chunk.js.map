{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Header","score","topScore","App","state","cards","gameEnd","_this","setState","forEach","card","count","alert","concat","find","o","i","sort","Math","random","_this2","this","components_Wrapper_Wrapper","components_Header_Header","map","friend","components_Card_Card","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"2jEAWeA,SARF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,WAAWN,EAAMO,MAC1DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCDxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCS1CC,SATA,SAAAd,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMa,UAC9BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACUJ,EAAMe,MADhB,eACmCf,EAAMgB,oBC0D9BC,mNAxDbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,SAAU,KAIZI,QAAU,WAWR,OAVIC,EAAKH,MAAMH,MAAQM,EAAKH,MAAMF,UAChCK,EAAKC,SAAS,CAACN,SAAUK,EAAKH,MAAMH,OAAQ,cAI9CM,EAAKH,MAAMC,MAAMI,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAEfC,MAAK,uBAAAC,OAAwBN,EAAKH,MAAMH,QACxCM,EAAKC,SAAS,CAACP,MAAO,KACf,KAGTT,WAAa,SAAAC,GACXc,EAAKH,MAAMC,MAAMS,KAAK,SAACC,EAAGC,GACxB,GAAGD,EAAEtB,KAAOA,EAAI,CACd,GAAuB,IAAnBY,EAAMW,GAAGL,MAMX,OALAN,EAAMW,GAAGL,MAAQN,EAAMW,GAAGL,MAAQ,EAClCJ,EAAKC,SAAS,CAACP,MAAOM,EAAKH,MAAMH,MAAQ,GAAI,cAG7CM,EAAKH,MAAMC,MAAMY,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPZ,EAAKD,sFAOJ,IAAAc,EAAAC,KACP,OACElC,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACkC,EAAD,CAAQtB,MAAOoB,KAAKjB,MAAMH,MAAOC,SAAUmB,KAAKjB,MAAMF,UAAtD,eACCmB,KAAKjB,MAAMC,MAAMmB,IAAI,SAAAC,GAAM,OAC1BtC,EAAAC,EAAAC,cAACqC,EAAD,CACAlC,WAAY4B,EAAK5B,WACfC,GAAIgC,EAAOhC,GACXkC,IAAKF,EAAOhC,GACZI,MAAO4B,EAAO5B,kBAlDR+B,cCFlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4d2b582b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;","import React from \"react\";\nimport \"./wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\">{props.children}</div>\n    <div className=\"scores\">\n      Score: {props.score} Highscore: {props.topScore}\n    </div>\n  </div>\n);\n\nexport default Header;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport \"./app.css\"\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    score: 0,\n    topScore: 0,\n    // clickedcards: []\n  };\n\n  gameEnd = () => {\n    if (this.state.score > this.state.topScore) {\n      this.setState({topScore: this.state.score}, function () {\n        // console.log(this.state.topScore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Game Over! \\nScore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.cards.find((o, i) => {\n      if(o.id === id) {\n        if (cards[i].count === 0){\n          cards[i].count = cards[i].count + 1;\n          this.setState({score: this.state.score + 1}, function() {\n            // console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameEnd();\n        }\n      }\n    });\n  }\n\n  // Map over this.state.cards and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} topScore={this.state.topScore}>Memory Game</Header>\n        {this.state.cards.map(friend => (\n          <Card\n          clickCount={this.clickCount}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./app.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}